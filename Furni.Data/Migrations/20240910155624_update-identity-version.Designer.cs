// <auto-generated />
using System;
using Furni.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Furni.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240910155624_update-identity-version")]
    partial class updateidentityversion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Furni.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Member Id");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Furni.Entities.Blog", b =>
                {
                    b.Property<string>("BlogId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Blog Id");

                    b.Property<string>("BlogName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Blog Name");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Create At");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("Update At");

                    b.Property<string>("UserIdCreated")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("User Id Created");

                    b.HasKey("BlogId");

                    b.HasIndex("UserIdCreated");

                    b.ToTable("Blog");

                    b.HasData(
                        new
                        {
                            BlogId = "B1",
                            BlogName = "Furniture Tips",
                            CreateAt = new DateTime(2024, 8, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7026),
                            UpdateAt = new DateTime(2024, 9, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7048),
                            UserIdCreated = "M1"
                        },
                        new
                        {
                            BlogId = "B2",
                            BlogName = "Interior Design Ideas",
                            CreateAt = new DateTime(2024, 7, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7051),
                            UpdateAt = new DateTime(2024, 9, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7051),
                            UserIdCreated = "M2"
                        },
                        new
                        {
                            BlogId = "B3",
                            BlogName = "Latest Trends in Furniture",
                            CreateAt = new DateTime(2024, 6, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7052),
                            UpdateAt = new DateTime(2024, 9, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7053),
                            UserIdCreated = "M3"
                        },
                        new
                        {
                            BlogId = "B4",
                            BlogName = "Home Decor Essentials",
                            CreateAt = new DateTime(2024, 5, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7054),
                            UpdateAt = new DateTime(2024, 9, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7055),
                            UserIdCreated = "M4"
                        },
                        new
                        {
                            BlogId = "B5",
                            BlogName = "Choosing the Right Furniture",
                            CreateAt = new DateTime(2024, 4, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7056),
                            UpdateAt = new DateTime(2024, 9, 10, 22, 56, 24, 121, DateTimeKind.Local).AddTicks(7056),
                            UserIdCreated = "M5"
                        });
                });

            modelBuilder.Entity("Furni.Entities.Cart", b =>
                {
                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Cart Id");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("User Id");

                    b.HasKey("CartId");

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            CartId = "C1",
                            Status = true,
                            UserId = "M1"
                        },
                        new
                        {
                            CartId = "C2",
                            Status = true,
                            UserId = "M2"
                        },
                        new
                        {
                            CartId = "C3",
                            Status = true,
                            UserId = "M3"
                        },
                        new
                        {
                            CartId = "C4",
                            Status = true,
                            UserId = "M4"
                        },
                        new
                        {
                            CartId = "C5",
                            Status = true,
                            UserId = "M5"
                        });
                });

            modelBuilder.Entity("Furni.Entities.Item", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Item Id");

                    b.Property<string>("CartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Cart Id");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Product Id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("ItemId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            ItemId = "I1",
                            CartId = "C1",
                            Price = 499.99f,
                            ProductId = "P1",
                            Quantity = 1,
                            Total = 499.99f
                        },
                        new
                        {
                            ItemId = "I2",
                            CartId = "C2",
                            Price = 79.99f,
                            ProductId = "P2",
                            Quantity = 2,
                            Total = 159.98f
                        },
                        new
                        {
                            ItemId = "I3",
                            CartId = "C3",
                            Price = 199.99f,
                            ProductId = "P3",
                            Quantity = 1,
                            Total = 199.99f
                        },
                        new
                        {
                            ItemId = "I4",
                            CartId = "C4",
                            Price = 29.99f,
                            ProductId = "P4",
                            Quantity = 3,
                            Total = 89.97f
                        },
                        new
                        {
                            ItemId = "I5",
                            CartId = "C5",
                            Price = 149.99f,
                            ProductId = "P5",
                            Quantity = 1,
                            Total = 149.99f
                        });
                });

            modelBuilder.Entity("Furni.Entities.Member", b =>
                {
                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Member Id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("First Name");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Full Name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Last Name");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Middle Name");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("URL Image");

                    b.HasKey("MemberId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberId = "M1",
                            FirstName = "John",
                            FullName = "John A Doe",
                            IsDeleted = false,
                            LastName = "Doe",
                            MiddleName = "A",
                            Position = "Admin",
                            Summary = "Administrator",
                            URLImage = "/images/johndoe.jpg"
                        },
                        new
                        {
                            MemberId = "M2",
                            FirstName = "Jane",
                            FullName = "Jane B Doe",
                            IsDeleted = false,
                            LastName = "Doe",
                            MiddleName = "B",
                            Position = "User",
                            Summary = "Regular user",
                            URLImage = "/images/janedoe.jpg"
                        },
                        new
                        {
                            MemberId = "M3",
                            FirstName = "Alice",
                            FullName = "Alice C Johnson",
                            IsDeleted = false,
                            LastName = "Johnson",
                            MiddleName = "C",
                            Position = "Designer",
                            Summary = "Interior Designer",
                            URLImage = "/images/alice.jpg"
                        },
                        new
                        {
                            MemberId = "M4",
                            FirstName = "Bob",
                            FullName = "Bob D Smith",
                            IsDeleted = false,
                            LastName = "Smith",
                            MiddleName = "D",
                            Position = "Sales",
                            Summary = "Sales Manager",
                            URLImage = "/images/bob.jpg"
                        },
                        new
                        {
                            MemberId = "M5",
                            FirstName = "Eve",
                            FullName = "Eve E Taylor",
                            IsDeleted = false,
                            LastName = "Taylor",
                            MiddleName = "E",
                            Position = "Marketing",
                            Summary = "Marketing Specialist",
                            URLImage = "/images/eve.jpg"
                        });
                });

            modelBuilder.Entity("Furni.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Product Id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is Active");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Product Name");

                    b.Property<string>("URLImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("URL Image");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = "P1",
                            IsActive = true,
                            Price = 499.99f,
                            ProductName = "Sofa",
                            URLImage = "/images/sofa.jpg"
                        },
                        new
                        {
                            ProductId = "P2",
                            IsActive = true,
                            Price = 79.99f,
                            ProductName = "Chair",
                            URLImage = "/images/chair.jpg"
                        },
                        new
                        {
                            ProductId = "P3",
                            IsActive = true,
                            Price = 199.99f,
                            ProductName = "Table",
                            URLImage = "/images/table.jpg"
                        },
                        new
                        {
                            ProductId = "P4",
                            IsActive = true,
                            Price = 29.99f,
                            ProductName = "Lamp",
                            URLImage = "/images/lamp.jpg"
                        },
                        new
                        {
                            ProductId = "P5",
                            IsActive = true,
                            Price = 149.99f,
                            ProductName = "Bookshelf",
                            URLImage = "/images/bookshelf.jpg"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Furni.Entities.Blog", b =>
                {
                    b.HasOne("Furni.Entities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("UserIdCreated")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Furni.Entities.Item", b =>
                {
                    b.HasOne("Furni.Entities.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Furni.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Furni.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Furni.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Furni.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Furni.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
